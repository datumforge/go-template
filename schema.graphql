directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateTodoInput is used for create Todo object.
Input was generated by ent.
"""
input CreateTodoInput {
	"""
	the name of the organization
	"""
	name: String!
	"""
	An optional description of the organization
	"""
	description: String
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
A valid JSON string.
"""
scalar JSON
type Mutation {
	"""
	Create a new todo
	"""
	createTodo(
		"""
		values of the todo
		"""
		input: CreateTodoInput!
	): TodoCreatePayload!
	"""
	Update an existing todo
	"""
	updateTodo(
		"""
		ID of the todo
		"""
		id: ID!

		"""
		New values for the todo
		"""
		input: UpdateTodoInput!
	): TodoUpdatePayload!
	"""
	Delete an existing todo
	"""
	deleteTodo(
		"""
		ID of the todo
		"""
		id: ID!
	): TodoDeletePayload!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/datumforge/go-template/internal/ent/generated.Noder") {
	"""
	The id of the object.
	"""
	id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
	"""
	Specifies an ascending order for a given `orderBy` argument.
	"""
	ASC
	"""
	Specifies a descending order for a given `orderBy` argument.
	"""
	DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
	"""
	When paginating forwards, are there more items?
	"""
	hasNextPage: Boolean!
	"""
	When paginating backwards, are there more items?
	"""
	hasPreviousPage: Boolean!
	"""
	When paginating backwards, the cursor to continue.
	"""
	startCursor: Cursor
	"""
	When paginating forwards, the cursor to continue.
	"""
	endCursor: Cursor
}
type Query {
	"""
	Fetches an object given its ID.
	"""
	node(
		"""
		ID of the object.
		"""
		id: ID!
	): Node
	"""
	Lookup nodes by a list of IDs.
	"""
	nodes(
		"""
		The list of node IDs.
		"""
		ids: [ID!]!
	): [Node]!
	"""
	Look up todo by ID
	"""
	todo(
		"""
		ID of the todo
		"""
		id: ID!
	): Todo!
}
type Todo implements Node {
	id: ID!
	"""
	the name of the organization
	"""
	name: String!
	"""
	An optional description of the organization
	"""
	description: String
}
"""
Return response for createTodo mutation
"""
type TodoCreatePayload {
	"""
	Created todo
	"""
	todo: Todo!
}
"""
Return response for deleteTodo mutation
"""
type TodoDeletePayload {
	"""
	Deleted todo ID
	"""
	deletedID: ID!
}
"""
Return response for updateTodo mutation
"""
type TodoUpdatePayload {
	"""
	Updated todo
	"""
	todo: Todo!
}
"""
TodoWhereInput is used for filtering Todo objects.
Input was generated by ent.
"""
input TodoWhereInput {
	not: TodoWhereInput
	and: [TodoWhereInput!]
	or: [TodoWhereInput!]
	"""
	id field predicates
	"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	idEqualFold: ID
	idContainsFold: ID
	"""
	name field predicates
	"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""
	description field predicates
	"""
	description: String
	descriptionNEQ: String
	descriptionIn: [String!]
	descriptionNotIn: [String!]
	descriptionGT: String
	descriptionGTE: String
	descriptionLT: String
	descriptionLTE: String
	descriptionContains: String
	descriptionHasPrefix: String
	descriptionHasSuffix: String
	descriptionIsNil: Boolean
	descriptionNotNil: Boolean
	descriptionEqualFold: String
	descriptionContainsFold: String
}
"""
UpdateTodoInput is used for update Todo object.
Input was generated by ent.
"""
input UpdateTodoInput {
	"""
	the name of the organization
	"""
	name: String
	"""
	An optional description of the organization
	"""
	description: String
	clearDescription: Boolean
}
